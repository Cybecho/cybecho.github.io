name: Hugo with Direct Notion API

on:
  push:
    branches: ["main"]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      # Notion 동기화 스크립트 실행
      - name: Notion to Hugo Sync
        run: |
          npm init -y
          npm install @notionhq/client

          NOTION_SECRET="${{ secrets.NOTION_SECRET }}" DATABASE_ID="${{ secrets.DATABASE_ID }}" node scripts/sync-notion.js

      # 동기화된 파일들을 저장소에 커밋 (Archives 변환 전에 커밋)
      - name: Commit Notion sync changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 작업 디렉토리 완전 정리
          echo "Cleaning working directory..."
          git add -A
          
          if ! git diff --staged --quiet; then
            echo "Changes detected, committing..."
            git commit -m "feat: Notion 포스트 동기화 업데이트"
            
            # 충돌 없는 안전한 푸시 전략
            echo "Attempting to push..."
            
            # 최신 상태 확인 후 푸시
            git fetch origin main
            
            # 현재 브랜치가 origin/main보다 뒤처져 있는지 확인
            BEHIND=$(git rev-list --count HEAD..origin/main)
            AHEAD=$(git rev-list --count origin/main..HEAD)
            
            echo "Commits behind: $BEHIND, ahead: $AHEAD"
            
            if [ "$BEHIND" -gt 0 ]; then
              echo "Branch is behind, creating new commit on top of origin/main..."
              # 현재 변경사항을 임시 저장
              COMMIT_MSG=$(git log -1 --pretty=%s)
              git reset --soft origin/main
              git commit -m "$COMMIT_MSG"
            fi
            
            # 이제 안전하게 푸시
            git push
          else
            echo "No changes to commit"
          fi

      # Archives 디렉토리 이미지 경로 변환 (로컬 작업용 -> Hugo 빌드용)
      # 원본 파일은 수정하지 않고, 빌드 시점에만 변환하여 Hugo에서 사용
      # 이 변환된 내용은 커밋하지 않음 (빌드용으로만 사용)
      - name: Convert Archive Image Paths for Build
        run: |
          echo "Converting archive image paths for Hugo build (temporary conversion)..."
          node scripts/convert-archive-images-for-build.js

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
        run: |
          echo "Building Hugo site..."
          hugo --gc --minify --buildFuture

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
