name: Deploy Hugo Site

on:
  push:
    branches: ["main"]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      # 🔧 Node.js 버전 업그레이드 (v20)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      # 🔧 DATABASE_ID 형식 수정
      - name: Sync Notion Content
        run: |
          echo "Installing notion-jam..."
          npm install -g notion-jam
          
          echo "Syncing Notion content..."
          echo "Database ID: ${{ secrets.DATABASE_ID }}"
          
          # 🔧 올바른 데이터베이스 URL 형식 사용
          notion-jam \
            --notion-token "${{ secrets.NOTION_SECRET }}" \
            --root-page "https://www.notion.so/${{ secrets.DATABASE_ID }}" \
            --output-dir "content/posts" \
            --download-images \
            --image-dir "static/images" || echo "Notion sync failed, continuing with existing content"

      # 기본 콘텐츠 생성
      - name: Create default content if needed
        run: |
          if [ ! -d "content/posts" ] || [ -z "$(ls -A content/posts 2>/dev/null)" ]; then
            echo "Creating default content..."
            mkdir -p content/posts/welcome
            cat > content/posts/welcome/index.md << 'EOF'
          ---
          title: "삽질 저장소에 오신 것을 환영합니다!"
          date: 2024-01-01T00:00:00+09:00
          draft: false
          tags: ["환영", "블로그"]
          ---

          # 환영합니다! 🎉

          이곳은 **Cybecho**의 개발 삽질과 학습을 기록하는 공간입니다.

          ## 무엇을 다루나요?

          - 🔧 **개발 삽질기**: 실패와 성공의 기록
          - 📚 **학습 노트**: 새로 배운 기술들
          - 💡 **문제 해결**: 트러블슈팅 과정
          - 🚀 **기술 탐험**: 신기술 실험

          ## 블로그 구조

          이 블로그는 다음 기술로 구축되었습니다:
          - **CMS**: Notion
          - **정적 사이트 생성기**: Hugo
          - **테마**: Lightbi
          - **호스팅**: GitHub Pages
          - **자동화**: GitHub Actions

          앞으로 많은 삽질 이야기들이 업로드될 예정입니다! 😄
          EOF
          fi

      # 🔧 Hugo 빌드 (verbose 플래그 제거)
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
        run: |
          echo "Building Hugo site..."
          echo "Hugo version: $(hugo version)"
          hugo --gc --minify

      # 빌드 결과 확인
      - name: Check build output
        run: |
          echo "=== Build completed ==="
          ls -la public/
          echo "=== Generated pages ==="
          find public -name "*.html" | wc -l
          echo "total HTML files generated"

      # GitHub Pages 배포
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy-to-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
